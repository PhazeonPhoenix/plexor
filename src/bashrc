# .bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# bash completion directory
source $HOME/.bash_completion.d/*.sh

# git prompt and git completion
source /usr/share/git/completion/git-prompt.sh
source /usr/share/git/completion/git-completion.bash

# dircolors
eval $(dircolors $HOME/.dir_colors)

export EDITOR="/usr/bin/vim"
export PAGER="/usr/bin/less"
export LANG="en_US.UTF-8"

# add ~/bin to path if it exists
[ -d $HOME/bin ] && export PATH=${PATH}:${HOME}/bin

# bash fixes and settings
# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize

# Disable Ctrl-S and Ctrl-Q from terminal sessions
stty -ixon

# History fun!
shopt -s histappend # append history rather than overwriting
export HISTCONTROL=ignoreboth # ignore duplicates and commands prefixed with a space
export HISTIGNORE='history*' #so the history doesn't fill itself with itself

bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

# display error codes
EC() { echo -e '\e[1;33m'retcode $?'\e[m'; }
trap EC ERR

# Lots of aliases
alias cal='cal -3'
alias dmesg='dmesg -HL'
alias df='df -h'
alias du='du -ch'
alias grep='GREP_COLOR="1;33;40" LANG=C grep --color=auto'
alias less='less -R'
alias mkdir='mkdir -p -v'
alias more='less'
alias nano='nano -w'

# ls
alias ls='ls -hF --color=auto'
alias l.='ls -d .*'
alias la='ls -A'
alias ll='ls -l'
alias lla='ls -lA'
alias lld='ls -ld'

# Safety features
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -I' 
alias ln='ln -i'
alias chown='chown --preserve-root' # fail when attempting to change /
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

# Id10t proofing
alias :q=' exit'
alias :Q=' exit'
alias :x=' exit'
alias cd..='cd ..'

# Privileged access
if [ $UID -ne 0 ]; then
    alias scat='sudo cat'
    alias svim='sudoedit'
    alias root='sudo -i'
    alias reboot='sudo systemctl reboot'
    alias poweroff='sudo systemctl poweroff'
    alias netctl='sudo netctl'
fi

# Optional aliases
alias todo='todo.sh'
alias diff='colordiff'
alias top='htop'
#alias yogurt='yaourt'

# Pacman aliases
#if necessary, replace 'pacman' with your favorite AUR helper and adapt the commands accordingly
alias pac="sudo /usr/bin/pacman -S"     # default action    - install one or more packages
alias pacu="/usr/bin/pacman -Syu"       # '[u]pdate'        - upgrade all packages to their newest version
alias pacr="sudo /usr/bin/pacman -Rns"  # '[r]emove'        - uninstall one or more packages
alias pacs="/usr/bin/pacman -Ss"        # '[s]earch'        - search for a package using one or more keywords
alias paci="/usr/bin/pacman -Si"        # '[i]nfo'      - show information about a package
alias paclo="/usr/bin/pacman -Qdt"      # '[l]ist [o]rphans'    - list all packages which are orphaned
alias pacc="sudo /usr/bin/pacman -Scc"  # '[c]lean cache'   - delete all not currently installed package files
alias paclf="/usr/bin/pacman -Ql"       # '[l]ist [f]iles'  - list all files installed by a given package
alias pacexpl="/usr/bin/pacman -D --asexp"  # 'mark as [expl]icit'  - mark one or more packages as explicitly installed 
alias pacimpl="/usr/bin/pacman -D --asdep"  # 'mark as [impl]icit'  - mark one or more packages as non explicitly installed

# '[r]emove [o]rphans' - recursively remove ALL orphaned packages
alias pacro="/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rns \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')"

# Display 256 colors
alias colortest256='(x=`tput op` y=`printf %76s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done)'

# Reset
Color_Off='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green
UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[0;105m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

PROMPT_COMMAND="history -a;history -n;__git_ps1 '\[$Blue\]\u\[$Color_Off\]@\[$Cyan\]\h \[$Yellow\]\w\[$Color_Off\]' ' \\\$ '"

GIT_PS1_SHOWDIRTYSTATE=yes
GIT_PS1_SHOWSTASHSTATE=yes
GIT_PS1_SHOWUNTRACKEDFILES=yes
GIT_PS1_SHOWCOLORHINTS=yes

# Local change support
[[ -r $HOME/.bashrc_local ]] && source $HOME/.bashrc_local

# launch tmux if not already in a session
if [ $TERM != "screen-256color" ] && [ $TERM != "screen" ]; then
    if tmux has-session -t main 2>/dev/null; then
        tmux attach -t main
    else
        tmux new -s main
    fi
fi
